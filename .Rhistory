sarima(Exports.noTrend, 0, 1, 1, no.constant=TRUE)
#use SARIMA to determent the performance
sarima(Exports.noTrend, 2, 1, 0, no.constant=TRUE)
sarima(Exports.noTrend, 3,1,2, no.constant=TRUE)
sarima(Exports.noTrend, 2,0,1, no.constant=TRUE)
sarima(Exports.noTrend, 2,0,1, no.constant=FALSE)
sarima(Exports.noTrend, 3,1,2, no.constant=FALSE)
sarima(Exports.noTrend, 3,1,2, no.constant=TRUE)
sarima(Exports.noTrend, 2,1,1, no.constant=TRUE)
sarima(Exports.noTrend, 3,1,1, no.constant=TRUE)
sarima(Exports.noTrend, 3,1,2, no.constant=TRUE)
View(finalPro_data)
load("C:/Users/Administratior/Downloads/finalproject.Rdata")
#use SARIMA to determent the performance
sarima(Exports.noTrend, 3, 1, 2, no.constant=TRUE)
# include=false will not performance our codes and results in the html file; echo=false will only show our outputs such as tables and plots
# import libraries and data here
library(ggplot2)
library(dplyr)
library(naniar)
library(astsa)
library(forecast)
library(TTR)
library(KernSmooth)
library(tseries)
load("finalproject.Rdata")
Exports<-ts(finalPro_data$Exports,start = 1960)
gg_miss_var(finalPro_data)+
labs(caption = "Figure 1: Missing Plot")+
theme(plot.caption = element_text(size = 16,hjust=0.5))
# Plot the Export as time series data
ts.plot(Exports,main = "Time series data")
sig_value <- 0.05 #significant value of test
# ADF: if p < sig, stationary
adf_result <- adf.test(Exports)$p.value
#KPSS: if p > sig, stationary
kpss_result <- kpss.test(Exports)$p.value
# Both tests indicate non-stationary.
#Try kernal smoothing for trend
kernel.type <- "gaussian"
bandwidth <- dpill(time(Exports), Exports)
smoothed_values <- ksmooth(x=time(Exports),y=Exports,kernel='normal',bandwidth = bandwidth,n.points = length(Exports))
plot(Exports,col='red')
lines(smoothed_values$x, smoothed_values$y,col='blue')
#zhuorui note: overfitting?
# Remove the Trend-cycle effect
#Exports.noTrend<-Exports-T.t
Exports.noTrend <- Exports - smoothed_values$y
plot(Exports.noTrend)
acf2(Exports.noTrend,max.lag= (length(Exports)-5))
#adf and kpss tests
adf.test(Exports.noTrend)
kpss.test(Exports.noTrend)
# Stationary now, indicating a AR(2) MA(1) possibly. Already stationary, no need for differential.
# Take the 1st-order difference and test if the data is stationary
Exports.diff<-diff(Exports.noTrend)
acf2(Exports.diff,max.lag= (length(Exports.diff)-5))
#Box.test(Exports.diff)
#based on acf and pacf, try ar(2), ma(1), arma(2,1,1) for Exports.noTrend
#AR(2)
Exports.ar2 <- arima(Exports.noTrend, order =c(2,1,0))
ar2.res <- Exports.ar2$residuals
#MA(2)
Exports.ma1 <- arima(Exports.noTrend, order =c(0,1,1))
ma1.res <- Exports.ma1$residuals
#ARMA(2,1,1)
Exports.ar2ma1 <- arima(Exports.noTrend, order =c(2,1,1))
ar2ma1.res <- Exports.ar2ma1$residuals
#ARMA(3,1,2)
Exports.ar3ma2 <- arima(Exports.noTrend, order =c(3,1,2))
ar3ma2.res <- Exports.ar3ma2$residuals
#auto selection
Exports.auto <- auto.arima(Exports.noTrend)
#use SARIMA to determent the performance
sarima(Exports.noTrend, 2, 1, 0, no.constant=TRUE)
#use SARIMA to determent the performance
sarima(Exports.noTrend, 0, 1, 1, no.constant=TRUE)
#use SARIMA to determent the performance
sarima(Exports.noTrend, 2, 1, 1, no.constant=TRUE)
#use SARIMA to determent the performance
sarima(Exports.noTrend, 3, 1, 2, no.constant=TRUE)
# include=false will not performance our codes and results in the html file; echo=false will only show our outputs such as tables and plots
# import libraries and data here
library(ggplot2)
library(dplyr)
library(naniar)
library(astsa)
library(forecast)
library(TTR)
library(KernSmooth)
library(tseries)
load("finalproject.Rdata")
Exports<-ts(finalPro_data$Exports,start = 1960)
# Plot the Export as time series data
ts.plot(Exports,main = "Time series data")
#Try kernal smoothing for trend
kernel.type <- "gaussian"
bandwidth <- dpill(time(Exports), Exports)
smoothed_values <- ksmooth(x=time(Exports),y=Exports,kernel='normal',bandwidth = bandwidth,n.points = length(Exports))
plot(Exports,col='red')
lines(smoothed_values$x, smoothed_values$y,col='blue')
#zhuorui note: overfitting?
#Try kernal smoothing for trend
kernel.type <- "gaussian"
bandwidth <- dpill(time(Exports), Exports)
smoothed_values <- ksmooth(x=time(Exports),y=Exports,kernel='normal',bandwidth = bandwidth,n.points = length(Exports))
plot(Exports,col='red')
lines(smoothed_values$x, smoothed_values$y,col='blue')
#zhuorui note: overfitting?
# Remove the Trend-cycle effect
#Exports.noTrend<-Exports-T.t
Exports.noTrend <- Exports - smoothed_values$y
plot(Exports.noTrend)
acf2(Exports.noTrend,max.lag= (length(Exports)-5))
#adf and kpss tests
adf.test(Exports.noTrend)
kpss.test(Exports.noTrend)
# Stationary now, indicating a AR(2) MA(1) possibly. Already stationary, no need for differential.
# Take the 1st-order difference and test if the data is stationary
Exports.diff<-diff(Exports.noTrend)
acf2(Exports.diff,max.lag= (length(Exports.diff)-5))
#Box.test(Exports.diff)
# Box=Cox transformation
lambda<-BoxCox.lambda(Exports)
Exports.Box<-BoxCox(Exports,lambda)
ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(Exports.Box,max.lag = (length(Exports.Box)-5))
# Box=Cox transformation
lambda<-BoxCox.lambda(Exports.noTrend)
Exports.Box<-BoxCox(Exports.noTrend,lambda)
#ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(Exports.Box,max.lag = (length(Exports.Box)-5))
# Box=Cox transformation
lambda<-BoxCox.lambda(Exports.noTrend)
Exports.Box<-BoxCox(Exports.noTrend,lambda)
#ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(Exports.Box,max.lag = 20)
# Box=Cox transformation
lambda<-BoxCox.lambda(Exports.noTrend)
Exports.Box<-BoxCox(Exports.noTrend,lambda)
#ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(Exports.Box,max.lag = (length(Exports.Box)-5))
#auto selection
Exports.auto <- auto.arima(Exports.noTrend)
View(Exports.auto)
Exports.auto
# include=false will not performance our codes and results in the html file; echo=false will only show our outputs such as tables and plots
# import libraries and data here
library(ggplot2)
library(dplyr)
library(naniar)
library(astsa)
library(forecast)
library(TTR)
library(KernSmooth)
library(tseries)
load("finalproject.Rdata")
Exports<-ts(finalPro_data$Exports,start = 1960)
# Plot the Export as time series data
ts.plot(Exports,main = "Time series data")
sig_value <- 0.05 #significant value of test
# ADF: if p < sig, stationary
adf.test(Exports)$p.value
#KPSS: if p > sig, stationary
kpss.test(Exports)$p.value
# Both tests indicate non-stationary.
#Try kernal smoothing for trend
kernel.type <- "gaussian"
bandwidth <- dpill(time(Exports), Exports)
smoothed_values <- ksmooth(x=time(Exports),y=Exports,kernel='normal',bandwidth = bandwidth,n.points = length(Exports))
plot(Exports,col='red')
lines(smoothed_values$x, smoothed_values$y,col='blue')
#zhuorui note: overfitting?
# Remove the Trend-cycle effect
#Exports.noTrend<-Exports-T.t
Exports.noTrend <- Exports - smoothed_values$y
plot(Exports.noTrend)
acf2(Exports.noTrend,max.lag= 20)
#adf and kpss tests
adf.test(Exports.noTrend)
kpss.test(Exports.noTrend)
# Stationary now, indicating a AR(2) MA(1) possibly. Already stationary, no need for differential.
acf2(Exports.noTrend,max.lag= 30)
#adf and kpss tests
adf.test(Exports.noTrend)
kpss.test(Exports.noTrend)
# Stationary now, indicating a AR(2) MA(1) possibly. Already stationary, no need for differential.
# Plot the Export as time series data
ts.plot(Exports,main = "Time series data")
acf2(Exports)
# Plot the Export as time series data
ts.plot(Exports,main = "Time series data")
acf2(Exports,max.lag=30)
#Try kernal smoothing for trend
kernel.type <- "gaussian"
bandwidth <- dpill(time(Exports), Exports)
smoothed_values <- ksmooth(x=time(Exports),y=Exports,kernel='normal',bandwidth = bandwidth,n.points = length(Exports))
plot(Exports,col='red')
lines(smoothed_values$x, smoothed_values$y,col='blue')
#zhuorui note: overfitting?
# Remove the Trend-cycle effect
#Exports.noTrend<-Exports-T.t
Exports.noTrend <- Exports - smoothed_values$y
plot(Exports.noTrend)
acf2(Exports.noTrend,max.lag= 30)
#adf and kpss tests
adf.test(Exports.noTrend)
kpss.test(Exports.noTrend)
# Stationary now, indicating a AR(2) MA(1) possibly. Already stationary, no need for differential.
# Take the 1st-order difference and test if the data is stationary
Exports.diff<-diff(Exports.noTrend)
acf2(Exports.diff,max.lag= 30)
#Box.test(Exports.diff)
#No change for MA, AR looks worse.
# Box=Cox transformation
lambda<-BoxCox.lambda(Exports.noTrend)
Exports.Box<-BoxCox(Exports.noTrend,lambda)
#ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(Exports.Box,max.lag = 30)
# no change for MA and AR.
sarima(Exports.noTrend,3,1,3)
sarima(Exports.noTrend,3,1,2)
sarima(Exports.noTrend,2,0,1)
sarima(Exports.noTrend,2,1,0)
sarima(Exports.noTrend,0,0,1)
sarima(Exports.noTrend,0,1,1)
sarima(Exports.noTrend,2,0,1)
sarima(Exports.noTrend,2,1,1)
#log
Exports.log <- log(Exports)
acf(Exports.log, max.lag=30)
#log
Exports.log <- log(Exports)
acf2(Exports.log, max.lag=30)
#log
Exports.log.diff <- diff(log(Exports))
acf2(Exports.log.diff, max.lag=30)
#log
Exports.log.diff <- diff(log(Exports.noTrend))
acf2(Exports.log.diff, max.lag=30)
# Take the 1st-order difference and test if the data is stationary
Exports.diff<-diff(Exports)
acf2(Exports.diff,max.lag= 30)
#Box.test(Exports.diff)
#No change for MA, AR looks worse.
# Box=Cox transformation
lambda<-BoxCox.lambda(Exports)
Exports.Box<-BoxCox(Exports,lambda)
#ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(Exports.Box,max.lag = 30)
# no change for MA and AR.
# Box=Cox transformation
lambda<-BoxCox.lambda(Exports)
Exports.Box<-BoxCox(Exports,0.01)
#ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(Exports.Box,max.lag = 30)
# no change for MA and AR.
# Take the 1st-order difference and test if the data is stationary
Exports.log<-log(Exports)
acf2(Exports.log,max.lag= 30)
#Box.test(Exports.diff)
#No change for MA, AR looks worse.
# Take the 1st-order difference and test if the data is stationary
Exports.log<-log(Exports)
acf2(Exports.log,max.lag= 30)
acf2((diff(Exports.log),max.lag= 30)
# Take the 1st-order difference and test if the data is stationary
Exports.log<-log(Exports)
acf2(Exports.log,max.lag= 30)
acf2((diff(Exports.log)),max.lag= 30)
#Box.test(Exports.diff)
#No change for MA, AR looks worse.
# Box=Cox transformation
lambda<-BoxCox.lambda(Exports)
Exports.Box<-BoxCox(Exports,lambda)
#ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(diff(Exports.Box),max.lag = 30)
# no change for MA and AR.
acf2(Exports.noTrend,max.lag= 30)
#adf and kpss tests
adf.test(Exports.noTrend)
kpss.test(Exports.noTrend)
# Stationary now, indicating a AR(2) MA(1) possibly. Already stationary, no need for differential.
acf2(diff(Exports.noTrend),max.lag=30)
auto.arima(Exports)
auto.arima(Exports.log)
auto.arima(Exports.Box)
auto.arima(Exports.noTrend)
#auto selection
Exports.auto <- auto.arima(Exports)
Exports.noTrend.auto <- auto.arima(Exports.noTrend)
Exports.Box.auto <- auto.arima(Exports.Box)
Exports.log.auto <- auto.arima(Exports.log)
#result(2,0,1)
View(Exports.Box.auto)
Exports.Box.auto[["arma"]]
#use SARIMA to determent the performance, acf of residual all need to be in range, p-value needs to be greater than 0.1, QQ lines close to the line.
sarima(Exports.noTrend, 2,0,1, no.constant=TRUE)
View(Exports.noTrend.auto)
auto.arima(Exports.noTrend)
gg_miss_var(finalPro_data)+
labs(caption = "Figure 1: Missing Plot")+
theme(plot.caption = element_text(size = 16,hjust=0.5))
# include=false will not performance our codes and results in the html file; echo=false will only show our outputs such as tables and plots
# import libraries and data here
library(ggplot2)
library(dplyr)
library(naniar)
library(astsa)
library(forecast)
library(TTR)
library(KernSmooth)
library(tseries)
load("finalproject.Rdata")
Exports<-ts(finalPro_data$Exports,start = 1960)
gg_miss_var(finalPro_data)+
labs(caption = "Figure 1: Missing Plot")+
theme(plot.caption = element_text(size = 16,hjust=0.5))
# Plot the Export as time series data
ts.plot(Exports,main = "Time series data")
acf2(Exports,max.lag=30)
sig_value <- 0.05 #significant value of test
# ADF: if p < sig, stationary
adf.test(Exports)$p.value
#KPSS: if p > sig, stationary
kpss.test(Exports)$p.value
# Both tests indicate non-stationary.
# Remove the Trend-cycle effect
#Exports.noTrend<-Exports-T.t
Exports.noTrend <- Exports - smoothed_values$y
plot(Exports.noTrend)
acf2(Exports.noTrend,max.lag= 30)
#adf and kpss tests
adf.test(Exports.noTrend)
kpss.test(Exports.noTrend)
# Stationary now, indicating a AR(2) MA(1) possibly. Already stationary, no need for differential.
# Take the 1st-order difference and test if the data is stationary
Exports.diff<-diff(Exports)
acf2(Exports.diff,max.lag= 30)
#suggesting AR(2), MA(1)
# Box=Cox transformation
lambda<-BoxCox.lambda(Exports)
Exports.Box<-BoxCox(Exports,lambda)
#ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(diff(Exports.Box),max.lag = 30)
# suggesting AR(1), MA(1)
# Take the 1st-order difference and test if the data is stationary
Exports.log<-log(Exports)
acf2(Exports.log,max.lag= 30)
acf2((diff(Exports.log)),max.lag= 30)
#suggesting AR(2) MA(1)
#auto selection
Exports.auto <- auto.arima(Exports)
Exports.noTrend.auto <- auto.arima(Exports.noTrend)
Exports.Box.auto <- auto.arima(Exports.Box)
Exports.log.auto <- auto.arima(Exports.log)
#use SARIMA to determent the performance, acf of residual all need to be in range, p-value needs to be greater than 0.1, QQ lines close to the line.
sarima(Exports.noTrend, 2,0,1, no.constant=TRUE)
# include=false will not performance our codes and results in the html file; echo=false will only show our outputs such as tables and plots
# import libraries and data here
library(ggplot2)
library(dplyr)
library(naniar)
library(astsa)
library(forecast)
library(TTR)
library(KernSmooth)
library(tseries)
load("finalproject.Rdata")
Exports<-ts(finalPro_data$Exports,start = 1960)
gg_miss_var(finalPro_data)+
labs(caption = "Figure 1: Missing Plot")+
theme(plot.caption = element_text(size = 16,hjust=0.5))
# Plot the Export as time series data
ts.plot(Exports,main = "Time series data")
acf2(Exports,max.lag=30)
sig_value <- 0.05 #significant value of test
# ADF: if p < sig, stationary
adf.test(Exports)$p.value
#KPSS: if p > sig, stationary
kpss.test(Exports)$p.value
# Both tests indicate non-stationary.
#Try kernal smoothing for trend
kernel.type <- "gaussian"
bandwidth <- dpill(time(Exports), Exports)
smoothed_values <- ksmooth(x=time(Exports),y=Exports,kernel='normal',bandwidth = bandwidth,n.points = length(Exports))
plot(Exports,col='red')
lines(smoothed_values$x, smoothed_values$y,col='blue')
# Remove the Trend-cycle effect
Exports.noTrend <- Exports - smoothed_values$y
plot(Exports.noTrend)
acf2(Exports.noTrend,max.lag= 30)
#adf and kpss tests
adf.test(Exports.noTrend)
kpss.test(Exports.noTrend)
# Stationary now, indicating a AR(2) MA(1) possibly. Already stationary, no need for differential.
# Take the 1st-order difference and test if the data is stationary
Exports.diff<-diff(Exports)
acf2(Exports.diff,max.lag= 30)
#suggesting AR(2), MA(1)
# Box-Cox transformation
lambda<-BoxCox.lambda(Exports)
Exports.Box<-BoxCox(Exports,lambda)
acf2(Exports.Box,max.lag = 30)
#ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(diff(Exports.Box),max.lag = 30)
# suggesting white noise, so discard this transformation
# Take the 1st-order difference and test if the data is stationary
Exports.log<-log(Exports)
acf2(Exports.log,max.lag= 30)
acf2((diff(Exports.log)),max.lag= 30)
#suggesting white noise, so discard this transformation
# Auto select the best p,d,q combination for ARIMA(p,d,q)
Exports.noTrend.auto <- auto.arima(Exports.noTrend)
summary(Exports.noTrend.auto)
# Use SARIMA to determent the performance, acf of residual all need to be in range, p-value needs to be greater than 0.1, QQ lines close to the line.
# ARIMA(2,0,1)
fit1<-sarima(Exports.noTrend, 2,0,1, no.constant=TRUE)
summary(fit1)
# MSE is a standard to evaluate the model. The smaller is the better.
MSE1<-sum(fit1$fit$residuals)/58
print(paste(c("Training MSE:",MSE1)))
# ARIMA(2,1,1)
fit2<-sarima(Exports.noTrend, 2,1,1, no.constant=TRUE)
summary(fit2)
# MSE
MSE2<-sum(fit2$fit$residuals)/58
print(paste(c("Training MSE:",MSE2)))
#ARIMA(3,0,1)
fit3<-sarima(Exports.noTrend, 3,0,1, no.constant=TRUE)
summary(fit3)
# MSE
MSE3<-sum(fit3$fit$residuals)/58
print(paste(c("Training MSE:",MSE3)))
# include=false will not performance our codes and results in the html file; echo=false will only show our outputs such as tables and plots
# import libraries and data here
library(ggplot2)
library(dplyr)
library(naniar)
library(astsa)
library(forecast)
library(TTR)
library(KernSmooth)
library(tseries)
load("finalproject.Rdata")
Exports<-ts(finalPro_data$Exports,start = 1960)
gg_miss_var(finalPro_data)+
labs(caption = "Figure 1: Missing Plot")+
theme(plot.caption = element_text(size = 16,hjust=0.5))
# Plot the Export as time series data
ts.plot(Exports,main = "Time series data")
acf2(Exports,max.lag=30)
sig_value <- 0.05 #significant value of test
# ADF: if p < sig, stationary
adf.test(Exports)$p.value
#KPSS: if p > sig, stationary
kpss.test(Exports)$p.value
# Both tests indicate non-stationary.
#Try kernal smoothing for trend
kernel.type <- "gaussian"
bandwidth <- dpill(time(Exports), Exports)
smoothed_values <- ksmooth(x=time(Exports),y=Exports,kernel='normal',bandwidth = bandwidth,n.points = length(Exports))
plot(Exports,col='red')
lines(smoothed_values$x, smoothed_values$y,col='blue')
# Remove the Trend-cycle effect
Exports.noTrend <- Exports - smoothed_values$y
plot(Exports.noTrend)
acf2(Exports.noTrend,max.lag= 30)
#adf and kpss tests
adf.test(Exports.noTrend)
kpss.test(Exports.noTrend)
# Stationary now, indicating a AR(2) MA(1) possibly. Already stationary, no need for differential.
# Take the 1st-order difference and test if the data is stationary
Exports.diff<-diff(Exports)
acf2(Exports.diff,max.lag= 30)
#suggesting AR(2), MA(1)
# Box-Cox transformation
lambda<-BoxCox.lambda(Exports)
Exports.Box<-BoxCox(Exports,lambda)
acf2(Exports.Box,max.lag = 30)
#ts.plot(Exports.Box,main = "Time series data after Box-Cox")
acf2(diff(Exports.Box),max.lag = 30)
# suggesting white noise, so discard this transformation
# Take the 1st-order difference and test if the data is stationary
Exports.log<-log(Exports)
acf2(Exports.log,max.lag= 30)
acf2((diff(Exports.log)),max.lag= 30)
#suggesting white noise, so discard this transformation
# Auto select the best p,d,q combination for ARIMA(p,d,q)
Exports.noTrend.auto <- auto.arima(Exports.noTrend)
summary(Exports.noTrend.auto)
# Use SARIMA to determent the performance, acf of residual all need to be in range, p-value needs to be greater than 0.1, QQ lines close to the line.
# ARIMA(2,0,1)
fit1<-sarima(Exports.noTrend, 2,0,1, no.constant=TRUE)
summary(fit1)
# MSE is a standard to evaluate the model. The smaller is the better.
MSE1<-sum(fit1$fit$residuals)/58
print(paste(c("Training MSE:",MSE1)))
# ARIMA(2,1,1)
fit2<-sarima(Exports.noTrend, 2,1,1, no.constant=TRUE)
summary(fit2)
# MSE
MSE2<-sum(fit2$fit$residuals)/58
print(paste(c("Training MSE:",MSE2)))
?acf2
# Plot ACF and PACF
acf2(Exports.noTrend,max.lag= 30,main = "ACF and PACF for data without trend")
knitr::opts_chunk$set(
include = FALSE
)
install.packages("tinytex::install_tinytex()")
tinytex::install_tinytex()
